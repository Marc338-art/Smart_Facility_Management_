- id: '0012'
  alias: Licht
  triggers:
  - entity_id: binary_sensor.turkontakt
    trigger: state
  actions:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state.state == "off" }}'
      sequence:
      - target:
          entity_id: switch.steckdose
        action: switch.turn_on
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state.state == "on" }}'
      sequence:
      - target:
          entity_id: switch.steckdose
        action: switch.turn_off
      - target:
          entity_id: climate.heizung
        action: climate.turn_off
- id: '1739273883927'
  alias: Bewegung_Automation
  description: ''
  triggers:
  - type: motion
    device_id: ac3ea4c0c2e8508859ae6bda4750f66d
    entity_id: e21eaa3955667294c20e71d8bd1727dd
    domain: binary_sensor
    trigger: device
  conditions:
  - type: is_not_open
    condition: device
    device_id: 50bc2e4917013b4927ab38df281884ce
    entity_id: d36e51fbcd3a661d1c1bcd89ba1baa1b
    domain: binary_sensor
  actions:
  - type: turn_on
    device_id: 9b45d2428595d587208b2f8546c401cd
    entity_id: aa5521896e4fef8eb77f84afbdc75dd9
    domain: switch
  - data:
      temperature: '{{ state_attr(''schedule.climate_schedule'', ''temperature'')
        | float(0) }}'
    target:
      entity_id: climate.heizung
    action: climate.set_temperature
  mode: single
- id: '90899'
  alias: Heizungssteuerung-C009(Zeitlich)
  description: ''
  triggers:
  - entity_id: climate.hmip_wth_b_2_0034626995f2d1
    trigger: state
  actions:
  - variables:
      previous_temperature: '{{ state_attr(''climate.hmip_etrv_cl_0035a0c9aa764b'',
        ''temperature'') }}'
  - action: climate.set_temperature
    data:
      temperature: '{{ state_attr(''climate.hmip_wth_b_2_0034626995f2d1'', ''temperature'')
        | float }}'
    target:
      entity_id:
      - climate.hmip_etrv_cl_0035a0c9aa764b
      - climate.hmip_etrv_cl_00359f29a70925
      - climate.hmip_etrv_cl_0035a0c9aa75fc
      - climate.hmip_etrv_cl_0035a0c9aa75eb
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - action: climate.set_temperature
    data:
      temperature: '{{ previous_temperature }}'
    target:
      entity_id:
      - climate.hmip_etrv_cl_0035a0c9aa764b
      - climate.hmip_etrv_cl_00359f29a70925
      - climate.hmip_etrv_cl_0035a0c9aa75fc
      - climate.hmip_etrv_cl_0035a0c9aa75eb
      - climate.hmip_wth_b_2_0034626995f2d1
      
      
      
      
      
- id: '90893249'
  alias: Heizungssteuerung-C009(Zeitlich) mit Binary und Steuerung
  triggers:
    - platform: state
      entity_id: binary_sensor.hmip_swdm_2_0034a2698f4da2
      to: 'on'  # Wenn der Türkontakt geöffnet wird
    - platform: state
      entity_id: binary_sensor.hmip_swdm_2_0034a2698f4da2
      to: 'off'  # Wenn der Türkontakt geschlossen wird
    - entity_id: climate.hmip_wth_b_2_0034626995f2d1
      trigger: state

  actions:
    
    - choose:
        - conditions:
            - condition: state
              entity_id: binary_sensor.hmip_swdm_2_0034a2698f4da2
              state: 'on'
          sequence:
            - variables:
                previous_temperature: '{{ state_attr(''climate.hmip_wth_b_2_0034626995f2d1'', ''temperature'') }}'
            - action: climate.set_temperature
              data:
                temperature: 17  # Setze Temperatur auf 17, wenn Tür geöffnet
              target:
                entity_id:
                  - climate.hmip_etrv_cl_0035a0c9aa764b
                  - climate.hmip_etrv_cl_00359f29a70925
                  - climate.hmip_etrv_cl_0035a0c9aa75fc
                  - climate.hmip_etrv_cl_0035a0c9aa75eb
                  
        - conditions:
            - condition: state
              entity_id: binary_sensor.hmip_swdm_2_0034a2698f4da2
              state: 'off'
          sequence:
            - action: climate.set_temperature
              data:
                temperature: '{{ state_attr(''climate.hmip_wth_b_2_0034626995f2d1'', ''temperature'') }}'  # es soll nur für z.B 2 Stunden die neu eingestellte temperatur sein und dann die aus der Datenbank ausgelsen werden
              target:
                entity_id:
                  - climate.hmip_etrv_cl_0035a0c9aa764b
                  - climate.hmip_etrv_cl_00359f29a70925
                  - climate.hmip_etrv_cl_0035a0c9aa75fc
                  - climate.hmip_etrv_cl_0035a0c9aa75eb
                  
- id: "1234829579834758"
  
  alias: Set Heater Temperature to climate_temperature every 10 seconds
  trigger:
      - platform: time_pattern
        seconds: "/10"  # Alle 10 Sekunden
  action:
      - service: climate.set_temperature
        target:
          entity_id: 
          - climate.hmip_etrv_cl_0035a0c9aa764b
        data:
          temperature: "{{ states('input_number.heating_temperature') | float }}"  # Der Wert von input_number.climate_temperature wird gesetzt

- id: "12987652578976"
  alias: 'Bewegungsmelder alle 2 Minuten auslesen'
  trigger:
      - platform: time_pattern
        seconds: '/20'  # Alle 2 Minuten
  action:
      - service: homeassistant.update_entity
        target:
          entity_id:
          - binary_sensor.hmip_smi55_2_0031a2698ec1ed_bewegung
          - binary_sensor.hmip_smi55_2_0031a2698ec1ed_beleuchtungsstarke
          

- id: '1293234939'
  alias: 'Heizung ausschalten nach 30 Minuten ohne Bewegung'
  trigger:
    - platform: state
      entity_id: binary_sensor.hmip_smi55_2_0031a2698ec1ed_bewegung
      to: 'off'
      for:
        seconds: 30  # 30 Minuten in Sekunden
  condition: []
  action:
    - service: climate.set_temperature
      entity_id: climate.hmip_etrv_cl_0035a0c9aa764b
      data:
        temperature: 17

- id: '1293234934539'
  alias: 'Heizung ausschalgdggffdgfdgdfgdfgMinuten ohne Bewegung'
  trigger:
    - platform: state
      entity_id: input_number.heating_temperature  # Dein input_number, der die Temperatur steuert
  condition: []
  action:
    - service: climate.set_temperature
      entity_id: climate.hmip_etrv_cl_0035a0c9aa764b
      data:
        temperature: 28


- id: '12932312312312314934539'
  alias: 'Heizung '
  trigger:
    - platform: state
      entity_id: input_number.heating_temperature  # Trigger bei Änderung der Heiztemperatur (wird druch stundenplan geändert) hier muss eine variable rein, die sich nicht bei temperautränderung ändert, sondern wenn der unterricht beginnt
  condition: []
  action:
    - delay: '00:00:30'  # Warte 30 Minuten nach der Änderung der Heiztemperatur
    - condition: state
      entity_id: binary_sensor.hmip_smi55_2_0031a2698ec1ed_bewegung
      state: 'off'  # Wenn keine Bewegung erkannt wird
    - service: climate.set_temperature
      entity_id: climate.hmip_etrv_cl_0035a0c9aa764b
      data:
        temperature: 17  # Die Temperatur auf 17 Grad setzen (Heizung ausschalten)








## unten- komplette automation mit Stundenplan einbindung und allen sensore (für Raim 1)##


- id: "1234"
  alias: Steuerung Raum C009
  triggers:
    - platform: state
      entity_id: binary_sensor.hmip_swdm_2_0034a2698f4da2
      to: "on" # Wenn der Türkontakt geöffnet wird
    - platform: state
      entity_id: binary_sensor.hmip_swdm_2_0034a2698f4da2
      to: "off" # Wenn der Türkontakt geschlossen wird
    - entity_id: climate.hmip_wth_b_2_0034626995f2d1
      trigger: state

  actions:
    - choose:
        - conditions: # wenn das Fenster auf ist, soll die Heizung ausgeschalztet werden (später soll auch eine variable die duch das python programm drin ist sagen ob fenster auf ist, je nachdem wie sich die temperatur verändert oder der CO2 gehalt)
            - condition: state
              entity_id: binary_sensor.hmip_swdm_2_0034a2698f4da2
              state: "on"
          sequence:
            - variables:
                previous_temperature: "{{ state_attr('climate.hmip_wth_b_2_0034626995f2d1', 'temperature') }}"
            - action: climate.set_temperature
              data:
                temperature: 17 # Setze Temperatur auf 17, wenn Tür geöffnet
              target:
                entity_id:
                  - climate.hmip_etrv_cl_0035a0c9aa764b
                  - climate.hmip_etrv_cl_00359f29a70925
                  - climate.hmip_etrv_cl_0035a0c9aa75fc
                  - climate.hmip_etrv_cl_0035a0c9aa75eb

        - conditions:
            - condition: state
              entity_id: binary_sensor.hmip_swdm_2_0034a2698f4da2
              state: "off"
          sequence:
            - action: climate.set_temperature
              data:
                temperature: "{{ state_attr('climate.hmip_wth_b_2_0034626995f2d1', 'temperature') }}" # es soll nur für z.B 2 Stunden die neu eingestellte temperatur sein und dann die aus der Datenbank ausgelsen werden
              target:
                entity_id:
                  - climate.hmip_etrv_cl_0035a0c9aa764b
                  - climate.hmip_etrv_cl_00359f29a70925
                  - climate.hmip_etrv_cl_0035a0c9aa75fc
                  - climate.hmip_etrv_cl_0035a0c9aa75eb






- id: "876213876321"
  alias: "Heiztemperatur per MQTT senden"
  description: Sendet den aktuellen Wert von input_number.heating_temperature_c005 über MQTT
  trigger:
    - platform: state
      entity_id: binary_sensor.hmip_smi_00091d8994556f_bewegung
      from: "off"  # Nur wenn der Zustand von "off" nach "on" wechselt
      to: "on"  # Nur wenn der Zustand zu "on" wechselt
    - platform: state
      entity_id:
        - binary_sensor.c009
        - climate.wandthermostat
  condition: []
  action:
    - service: mqtt.publish
      data:
        topic: "ha_main"
        payload: "{{ state_attr(trigger.entity_id, 'friendly_name') }}"
        retain: false
  mode: single



- alias: Temperatur auf alle Geräte in Gruppen C009 und Modellhaus anwenden
  trigger:
    - platform: time_pattern
      seconds: "/10"

  variables:
    climate_entities_c009: "{{ expand('group.c009') | map(attribute='entity_id') | list }}"
    climate_entities_modellhaus: "{{ expand('group.modellhaus') | map(attribute='entity_id') | list }}"
    temperatur_c009: "{{ states('input_number.heating_temperature_c002_2') | float }}"
    temperatur_modellhaus: "{{ states('input_number.heating_temperature_c002_2') | float }}"

  action:
    - repeat:
        for_each: "{{ climate_entities_c009 }}"
        sequence:
          - service: climate.set_temperature
            target:
              entity_id: "{{ repeat.item }}"
            data:
              temperature: "{{ temperatur_c009 }}"
              
    - repeat:
        for_each: "{{ climate_entities_modellhaus }}"
        sequence:
          - service: climate.set_temperature
            target:
              entity_id: "{{ repeat.item }}"
            data:
              temperature: "{{ temperatur_modellhaus }}"
