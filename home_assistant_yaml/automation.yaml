- id: '876213876321'
  alias: Heiztemperatur per MQTT senden
  description: Sendet den aktuellen Wert von input_number.heating_temperature_c005
    über MQTT
  triggers:
  - entity_id:
    - binary_sensor.bewegungssensor_c005
    - binary_sensor.bewegungssensor_c009
    from: 'off'
    to: 'on'
    trigger: state
  conditions: []
  actions:
  - data:
      topic: ha_main
      payload: '{{ state_attr(trigger.entity_id, ''friendly_name'') }}'
      retain: false
    action: mqtt.publish
  mode: single
- id: heizung_neu_starten_bei_temp_aenderung
  alias: Heizung bei Änderung am Wandthermostat starten
  trigger:
  - platform: state
    entity_id: climate.wandthermostat_c005
    attribute: temperature
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.attributes.temperature != trigger.from_state.attributes.temperature
      }}'
  action:
  - service: script.heating
    data:
      temperature: '{{ state_attr(''climate.wandthermostat_c005'', ''temperature'')
        | float }}'
  mode: restart
- id: mqtt_stundenankuendigung_fixed_times
  alias: MQTT 30 Min vor Stunde (feste Zeiten)
  triggers:
  - at: 07:01:00
    trigger: time
  - at: '11:17:00'
    trigger: time
  - at: '10:41:00'
    trigger: time
  - at: '12:31:00'
    trigger: time
  - at: '14:24:00'
    trigger: time
  - at: '16:01:00'
    trigger: time
  - trigger: time
    at: '17:46:00'
  - trigger: time
    at: '19:16:00'
  - trigger: time
    at: '20:15:00'
  actions:
  - data:
      topic: stundenplan_belegung
      payload: "Stunde beginnt in 30 Minuten \n"
      retain: false
    action: mqtt.publish
  mode: single
- id: heizung_stundenplan
  alias: Stundenplan Steuerung
  triggers:
  - seconds: /10
    trigger: time_pattern
  conditions:
  - condition: time
    after: 07:00:00
    before: '20:30:00'
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
    - sat
  actions:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.fensterkontakt_c009
        state: 'off'
      sequence:
      - repeat:
          for_each: '{{ climate_entities_c009 }}'
          sequence:
          - target:
              entity_id: '{{ repeat.item }}'
            data:
              temperature: '{{ temperatur_c009 }}'
            action: climate.set_temperature
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.fensterkontakt_c005
        state: 'off'
      sequence:
      - repeat:
          for_each: '{{ climate_entities_c005 }}'
          sequence:
          - target:
              entity_id: '{{ repeat.item }}'
            data:
              temperature: '{{ temperatur_c005 }}'
            action: climate.set_temperature
  variables:
    climate_entities_c009: '{{ expand(''group.heizung_c009'') | map(attribute=''entity_id'')
      | list }}'
    climate_entities_c005: '{{ expand(''group.heizung_c005'') | map(attribute=''entity_id'')
      | list }}'
    temperatur_c009: '{{ states(''input_number.heating_temperature_c009'') | float
      }}'
    temperatur_c005: '{{ states(''input_number.heating_temperature_c005'') | float
      }}'
  mode: restart
- id: heizung_manuell
  alias: Heizung Manuell 
  trigger:
    - platform: state
      entity_id: input_number.manuelle_heiztemperatur
    - platform: time_pattern
      seconds: "/10"
  variables:
    temperature_manual: "{{ states('input_number.manuelle_heiztemperatur') | float }}"
    climate_entities: "{{ state_attr('group.cgebaeude', 'entity_id') }}"
  action:
    - repeat:
        for_each: "{{ climate_entities }}"
        sequence:
          - service: climate.set_temperature
            target:
              entity_id: "{{ repeat.item }}"
            data:
              temperature: "{{ temperature_manual }}"
  mode: restart
