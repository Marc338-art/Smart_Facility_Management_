- id: '876213876321'
  alias: Bewegungssensor per MQTT senden
  description: Sendet den aktuellen Wert vom Bewegungssensor des jeweiligen Raumes
    체ber MQTT
  triggers:
  - entity_id:
    - binary_sensor.bewegungssensor_c001
    - binary_sensor.bewegungssensor_c002
    - binary_sensor.bewegungssensor_c003_1
    - binary_sensor.bewegungssensor_c003_3
    - binary_sensor.bewegungssensor_c004
    - binary_sensor.bewegungssensor_c005
    - binary_sensor.bewegungssensor_c011
    - binary_sensor.bewegungssensor_c016
    - binary_sensor.bewegungssensor_c017
    - binary_sensor.bewegungssensor_c101
    - binary_sensor.bewegungssensor_c104
    - binary_sensor.bewegungssensor_c106
    - binary_sensor.bewegungssensor_c005
    - binary_sensor.bewegungssensor_c109_1
    - binary_sensor.bewegungssensor_c110
    - binary_sensor.bewegungssensor_c111
    - binary_sensor.bewegungssensor_c112
    - binary_sensor.bewegungssensor_c115
    - binary_sensor.bewegungssensor_c116
    from: 'off'
    to: 'on'
    trigger: state
  conditions: []
  actions:
  - data:
      topic: ha_main
      payload: '{{ state_attr(trigger.entity_id, ''friendly_name'') }}'
      retain: false
    action: mqtt.publish
  mode: single
- id: mqtt_stundenankuendigung_fixed_times
  alias: MQTT 30 Min vor Stunde (feste Zeiten)
  triggers:
  - at: 07:01:00
    trigger: time
  - at: '11:49:00'
    trigger: time
  - at: '14:58:00'
    trigger: time
  - at: '12:31:00'
    trigger: time
  - at: '14:24:00'
    trigger: time
  - at: '16:01:00'
    trigger: time
  - trigger: time
    at: '17:46:00'
  - trigger: time
    at: '19:16:00'
  - trigger: time
    at: '20:15:00'
  actions:
  - data:
      topic: stundenplan_belegung
      payload: "Stunde beginnt in 30 Minuten \n"
      retain: false
    action: mqtt.publish
  mode: single
- id: heizung_manuell
  alias: Heizung Manuell (Priorit채t 체ber Wochenprofil)
  triggers:
  - entity_id: input_number.manuelle_heiztemperatur
    trigger: state
  - trigger: time_pattern
    minutes: /7
  conditions:
  - condition: state
    entity_id: input_select.heiz_modus
    state: manuell
  actions:
  - repeat:
      for_each: '{{ climate_entities }}'
      sequence:
      - target:
          entity_id: '{{ repeat.item }}'
        data:
          temperature: '{{ temperature_manual }}'
        action: climate.set_temperature
      - delay: 00:00:05
  mode: restart
  variables:
    temperature_manual: '{{ states(''input_number.manuelle_heiztemperatur'') | float
      }}'
    climate_entities: '{{ expand(''group.cgebaeude'') | map(attribute=''entity_id'')
      | list }}

      '
- id: '8762'
  alias: Wandthermostat per MQTT senden
  description: Sendet den Friendly Name und die aktuelle Temperatur eines Wandthermostats
    per MQTT
  trigger:
  - platform: state
    entity_id:
    - climate.wandthermostat_c001
    - climate.wandthermostat_c002
    - climate.wandthermostat_c003_1
    - climate.wandthermostat_c003_3
    - climate.wandthermostat_c004
    - climate.wandthermostat_c005
    - climate.wandthermostat_c011
    - climate.hmip_bwth_000ca2699c47dd
    - climate.wandthermostat_c101
    - climate.wandthermostat_c104
    - climate.wandthermostat_c106
    - climate.wandthermostat_c109_1
    - climate.wandthermostat_c111
    - climate.wandthermostat_c112
    - climate.wandthermostat_c115
    - climate.wandthermostat_c116
  condition: []
  action:
  - service: mqtt.publish
    data:
      topic: wandthermostat_aenderung
      payload: '{{ state_attr(trigger.entity_id, ''friendly_name'') }}: {{ state_attr(trigger.entity_id,
        ''temperature'') }}째C

        '
      retain: false
  mode: single
- alias: Heiztemperaturen_zyklisch_setzen
  id: d0519adf61e7437fa08d3da1a2828beb
  trigger:
  - platform: time_pattern
    seconds: /10
  condition:
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
    - sat
    after: 07:00:00
    before: '20:00:00'
  action:
  - service: script.set_heating_temperatures
  mode: single
